<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.day.dao.OrderDao">

    <resultMap id="BaseResultMap" type="com.day.entity.Order">
        <!--@Table order-->
        <result property="orderId" column="order_id" />
        <result property="orderName" column="order_name" />
        <result property="payMode" column="pay_mode" />
        <result property="orderTime" column="order_time" />
        <result property="orderStatus" column="order_status" />
        <result property="remarks" column="remarks"/>
        <result property="delFlag" column="del_flag"/>
        <collection property="orderDetails" column="{orderDetailsId=order_id}"
                    ofType="com.day.entity.OrderDetails"
                    select="com.day.dao.OrderDetailsDao.queryById"></collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        order_id, order_name, pay_mode, order_time, order_status, remarks, del_flag
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from easy_code.order
        where order_id = #{orderId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from easy_code.order
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from easy_code.order
        <where>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="orderName != null and orderName != ''">
                and order_name = #{orderName}
            </if>
            <if test="payMode != null and payMode != ''">
                and pay_mode = #{payMode}
            </if>
            <if test="orderTime != null">
                and order_time = #{orderTime}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                and order_status = #{orderStatus}
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks = #{remarks}
            </if>
            <if test="delFlag != null and delFlag != ''">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderId" useGeneratedKeys="true">
        insert into easy_code.order(order_name, pay_mode, order_time, order_status, remarks, del_flag)
        values (#{orderName}, #{payMode}, #{orderTime}, #{orderStatus}, #{remarks}, #{delFlag})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update easy_code.order
        <set>
            <if test="orderName != null and orderName != ''">
                order_name = #{orderName},
            </if>
            <if test="payMode != null and payMode != ''">
                pay_mode = #{payMode},
            </if>
            <if test="orderTime != null">
                order_time = #{orderTime},
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                order_status = #{orderStatus},
            </if>
            <if test="remarks != null and remarks != ''">
                remarks = #{remarks},
            </if>
            <if test="delFlag != null and delFlag != ''">
                del_flag = #{delFlag},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from easy_code.order where order_id = #{orderId}
    </delete>


    <insert id="addOrderDetailList"  useGeneratedKeys="true" keyProperty="order_details_id">
        insert into `order_details`  (order_id, product_name,piece,image,money,unit_price)
        values
        <foreach collection="orderDetails" item="e" separator=",">
            (#{e.order_id}, #{e.product_name}, #{e.piece},#{e.image}, #{e.money},#{e.unit_price})
        </foreach>
    </insert>

</mapper>